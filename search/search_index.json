{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Introduction This is a completely open-source platform for maintaining curated list of interview questions and answers for people looking and preparing for data science opportunities. Not only this, the platform will also serve as one point destination for all your needs like tutorials, online materials, etc. This platform is maintained by you! \ud83e\udd17 You can help us by answering/ improving existing questions as well as by sharing any new questions that you faced during your interviews. Contribute to the platform Contribution in any form will be deeply appreciated. \ud83d\ude4f Add questions \u2753 Add your questions here . Please ensure to provide a detailed description to allow your fellow contributors to understand your questions and answer them to your satisfaction. \ud83e\udd1d Please note that as of now, you cannot directly add a question via a pull request. This will help us to maintain the quality of the content for you . Add answers/topics \ud83d\udcdd These are the answers/topics that need your help at the moment Add documentation for the project Online Material for Learning Suggested Learning Paths Cheat Sheets Django Flask Numpy Pandas PySpark Python RegEx SQL NLP Interview Questions Add python common DSA interview questions Add Major ML topics Linear Regression Logistic Regression SVM Random Forest Gradient boosting PCA Collaborative Filtering K-means clustering kNN ARIMA Neural Networks Decision Trees Overfitting, Underfitting Unbalanced, Skewed data Activation functions relu/ leaky relu Normalization DBSCAN Normal Distribution Precision, Recall Loss Function MAE, RMSE Add Pandas questions Add NumPy questions Add TensorFlow questions Add PyTorch questions Add list of learning resources Report/Solve Issues \ud83d\udd27 To report any issues find me on LinkedIn or raise an issue on GitHub. \ud83d\udee0 You can also solve existing issues on GitHub and create a pull request. Say Thanks \ud83d\ude0a If this platform helped you in any way, it would be great if you could share it with others. Check out this \ud83d\udc47 platform \ud83d\udc47 for data science content: \ud83d\udc49 https://singhsidhukuldeep.github.io/data-science-interview-prep/ \ud83d\udc48 You can also star the repository on GitHub and watch-out for any updates Features \ud83c\udfa8 Beautiful: The design is built on top of most popular libraries like MkDocs and material which allows the platform to be responsive and to work on all sorts of devices \u2013 from mobile phones to wide-screens. The underlying fluid layout will always adapt perfectly to the available screen space. \ud83e\uddd0 Searchable: almost magically, all the content on the website is searchable without any further ado. The built-in search \u2013 server-less \u2013 is fast and accurate in responses to any of the queries. \ud83d\ude4c Accessible: Easy to use: \ud83d\udc4c The website is hosted on github-pages and is free and open to use to over 40 million users of GitHub in 100+ countries. Easy to contribute: \ud83e\udd1d The website embodies the concept of collaboration to the latter. Allowing anyone to add/improve the content. To make contributing easy, everything is written in MarkDown and then compiled to beautiful html. Setup No setup is required for usage of the platform Important: It is strongly advised to use virtual environment and not change anything in gh-pages Linux Systems python3 -m venv ./venv source venv/bin/activate pip3 install -r requirements.txt deactivate Windows Systems python3 -m venv ./venv venv \\S cripts \\a ctivate pip3 install -r requirements.txt venv \\S cripts \\d eactivate To install the latest pip3 install mkdocs pip3 install mkdocs-material pip3 install mkdocs-minify-plugin pip3 install mkdocs-git-revision-date-localized-plugin Useful Commands mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. mkdocs new [dir-name] - Create a new project. No need to create a new project Useful Documents \ud83d\udcd1 MkDocs: GitHub: https://github.com/mkdocs/mkdocs Documentation: https://www.mkdocs.org/ \ud83c\udfa8 Theme: GitHub: https://github.com/squidfunk/mkdocs-material Documentation: https://squidfunk.github.io/mkdocs-material/getting-started/ FAQ Can I filter questions based on companies? \ud83e\udd2a As much as this platform aims to help you with your interview preparation, it is not a short-cut to crack one. Think of this platform as a practicing field to help you sharpen your skills for your interview processes. However, for your convenience we have sorted all the questions by topics for you. \ud83e\udd13 This doesn't mean that such feature won't be added in the future. \"Never say Never\" But as of now there is neither plan nor data to do so. \ud83d\ude22 Why is this platform free? \ud83e\udd17 Currently there is no major cost involved in maintaining this platform other than time and effort that is put in by every contributor . If you want to help you can contribute here . If you still want to pay for something that is free, we would request you to donate it to a charity of your choice instead. \ud83d\ude07 Credits Maintained by \ud83d\udc68\u200d\ud83c\udf93 Kuldeep Singh Sidhu Github: github/singhsidhukuldeep https://github.com/singhsidhukuldeep Website: Kuldeep Singh Sidhu (Website) http://kuldeepsinghsidhu.com LinkedIn: Kuldeep Singh Sidhu (LinkedIn) https://www.linkedin.com/in/singhsidhukuldeep/ Contributors \ud83d\ude0e The full list of all the contributors is available here Current Status","title":"\ud83c\udfe1 Home"},{"location":"#home","text":"","title":"Home"},{"location":"#introduction","text":"This is a completely open-source platform for maintaining curated list of interview questions and answers for people looking and preparing for data science opportunities. Not only this, the platform will also serve as one point destination for all your needs like tutorials, online materials, etc. This platform is maintained by you! \ud83e\udd17 You can help us by answering/ improving existing questions as well as by sharing any new questions that you faced during your interviews.","title":"Introduction"},{"location":"#contribute-to-the-platform","text":"Contribution in any form will be deeply appreciated. \ud83d\ude4f","title":"Contribute to the platform"},{"location":"#add-questions","text":"\u2753 Add your questions here . Please ensure to provide a detailed description to allow your fellow contributors to understand your questions and answer them to your satisfaction. \ud83e\udd1d Please note that as of now, you cannot directly add a question via a pull request. This will help us to maintain the quality of the content for you .","title":"Add questions"},{"location":"#add-answerstopics","text":"\ud83d\udcdd These are the answers/topics that need your help at the moment Add documentation for the project Online Material for Learning Suggested Learning Paths Cheat Sheets Django Flask Numpy Pandas PySpark Python RegEx SQL NLP Interview Questions Add python common DSA interview questions Add Major ML topics Linear Regression Logistic Regression SVM Random Forest Gradient boosting PCA Collaborative Filtering K-means clustering kNN ARIMA Neural Networks Decision Trees Overfitting, Underfitting Unbalanced, Skewed data Activation functions relu/ leaky relu Normalization DBSCAN Normal Distribution Precision, Recall Loss Function MAE, RMSE Add Pandas questions Add NumPy questions Add TensorFlow questions Add PyTorch questions Add list of learning resources","title":"Add answers/topics"},{"location":"#reportsolve-issues","text":"\ud83d\udd27 To report any issues find me on LinkedIn or raise an issue on GitHub. \ud83d\udee0 You can also solve existing issues on GitHub and create a pull request.","title":"Report/Solve Issues"},{"location":"#say-thanks","text":"\ud83d\ude0a If this platform helped you in any way, it would be great if you could share it with others. Check out this \ud83d\udc47 platform \ud83d\udc47 for data science content: \ud83d\udc49 https://singhsidhukuldeep.github.io/data-science-interview-prep/ \ud83d\udc48 You can also star the repository on GitHub and watch-out for any updates","title":"Say Thanks"},{"location":"#features","text":"\ud83c\udfa8 Beautiful: The design is built on top of most popular libraries like MkDocs and material which allows the platform to be responsive and to work on all sorts of devices \u2013 from mobile phones to wide-screens. The underlying fluid layout will always adapt perfectly to the available screen space. \ud83e\uddd0 Searchable: almost magically, all the content on the website is searchable without any further ado. The built-in search \u2013 server-less \u2013 is fast and accurate in responses to any of the queries. \ud83d\ude4c Accessible: Easy to use: \ud83d\udc4c The website is hosted on github-pages and is free and open to use to over 40 million users of GitHub in 100+ countries. Easy to contribute: \ud83e\udd1d The website embodies the concept of collaboration to the latter. Allowing anyone to add/improve the content. To make contributing easy, everything is written in MarkDown and then compiled to beautiful html.","title":"Features"},{"location":"#setup","text":"No setup is required for usage of the platform Important: It is strongly advised to use virtual environment and not change anything in gh-pages","title":"Setup"},{"location":"#linux-systems","text":"python3 -m venv ./venv source venv/bin/activate pip3 install -r requirements.txt deactivate","title":"Linux Systems"},{"location":"#windows-systems","text":"python3 -m venv ./venv venv \\S cripts \\a ctivate pip3 install -r requirements.txt venv \\S cripts \\d eactivate","title":"Windows Systems"},{"location":"#to-install-the-latest","text":"pip3 install mkdocs pip3 install mkdocs-material pip3 install mkdocs-minify-plugin pip3 install mkdocs-git-revision-date-localized-plugin","title":"To install the latest"},{"location":"#useful-commands","text":"mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. mkdocs new [dir-name] - Create a new project. No need to create a new project","title":"Useful Commands"},{"location":"#useful-documents","text":"\ud83d\udcd1 MkDocs: GitHub: https://github.com/mkdocs/mkdocs Documentation: https://www.mkdocs.org/ \ud83c\udfa8 Theme: GitHub: https://github.com/squidfunk/mkdocs-material Documentation: https://squidfunk.github.io/mkdocs-material/getting-started/","title":"Useful Documents"},{"location":"#faq","text":"Can I filter questions based on companies? \ud83e\udd2a As much as this platform aims to help you with your interview preparation, it is not a short-cut to crack one. Think of this platform as a practicing field to help you sharpen your skills for your interview processes. However, for your convenience we have sorted all the questions by topics for you. \ud83e\udd13 This doesn't mean that such feature won't be added in the future. \"Never say Never\" But as of now there is neither plan nor data to do so. \ud83d\ude22 Why is this platform free? \ud83e\udd17 Currently there is no major cost involved in maintaining this platform other than time and effort that is put in by every contributor . If you want to help you can contribute here . If you still want to pay for something that is free, we would request you to donate it to a charity of your choice instead. \ud83d\ude07","title":"FAQ"},{"location":"#credits","text":"","title":"Credits"},{"location":"#maintained-by","text":"\ud83d\udc68\u200d\ud83c\udf93 Kuldeep Singh Sidhu Github: github/singhsidhukuldeep https://github.com/singhsidhukuldeep Website: Kuldeep Singh Sidhu (Website) http://kuldeepsinghsidhu.com LinkedIn: Kuldeep Singh Sidhu (LinkedIn) https://www.linkedin.com/in/singhsidhukuldeep/","title":"Maintained by"},{"location":"#contributors","text":"\ud83d\ude0e The full list of all the contributors is available here","title":"Contributors"},{"location":"#current-status","text":"","title":"Current Status"},{"location":"Suggested-Learning-Paths/","text":"","title":"\ud83d\udcc5 Suggested Learning Paths"},{"location":"projects/","text":"Projects Introduction These are the projects that you can take inspiration from and try to improve on them. \u270d\ufe0f Popular Sources List of projects Natural Language processing (NLP) Title Description Source Author Text Classification with Facebook fasttext Building the User Review Model with fastText (Text Classification) with response time of less than one second Kuldeep Singh Sidhu Chat-bot using ChatterBot ChatterBot is a Python library that makes it easy to generate automated responses to a user\u2019s input. Kuldeep Singh Sidhu Text Summarizer Comparing state of the art models for text summary generation Kuldeep Singh Sidhu NLP with Spacy Building NLP pipeline using Spacy Kuldeep Singh Sidhu Recommendation Engine Title Description Source Author Recommendation Engine with Surprise Comparing different recommendation systems algorithms like SVD, SVDpp (Matrix Factorization), KNN Baseline, KNN Basic, KNN Means, KNN ZScore), Baseline, Co Clustering Kuldeep Singh Sidhu Image Processing Title Description Source Author Facial Landmarks Using Dlib, a library capable of giving you 68 points (land marks) of the face. Kuldeep Singh Sidhu Reinforcement Learning Title Description Source Author Google Dopamine Dopamine is a research framework for fast prototyping of reinforcement learning algorithms. Kuldeep Singh Sidhu Tic Tac Toe Training a computer to play Tic Tac Toe using reinforcement learning algorithms. Kuldeep Singh Sidhu Others Title Description Source Author TensorFlow Eager Execution Eager Execution (EE) enables you to run operations immediately. Kuldeep Singh Sidhu","title":"\ud83d\udcf3 Projects"},{"location":"projects/#projects","text":"","title":"Projects"},{"location":"projects/#introduction","text":"These are the projects that you can take inspiration from and try to improve on them. \u270d\ufe0f","title":"Introduction"},{"location":"projects/#popular-sources","text":"","title":"Popular Sources"},{"location":"projects/#list-of-projects","text":"","title":"List of projects"},{"location":"projects/#natural-language-processing-nlp","text":"Title Description Source Author Text Classification with Facebook fasttext Building the User Review Model with fastText (Text Classification) with response time of less than one second Kuldeep Singh Sidhu Chat-bot using ChatterBot ChatterBot is a Python library that makes it easy to generate automated responses to a user\u2019s input. Kuldeep Singh Sidhu Text Summarizer Comparing state of the art models for text summary generation Kuldeep Singh Sidhu NLP with Spacy Building NLP pipeline using Spacy Kuldeep Singh Sidhu","title":"Natural Language processing (NLP)"},{"location":"projects/#recommendation-engine","text":"Title Description Source Author Recommendation Engine with Surprise Comparing different recommendation systems algorithms like SVD, SVDpp (Matrix Factorization), KNN Baseline, KNN Basic, KNN Means, KNN ZScore), Baseline, Co Clustering Kuldeep Singh Sidhu","title":"Recommendation Engine"},{"location":"projects/#image-processing","text":"Title Description Source Author Facial Landmarks Using Dlib, a library capable of giving you 68 points (land marks) of the face. Kuldeep Singh Sidhu","title":"Image Processing"},{"location":"projects/#reinforcement-learning","text":"Title Description Source Author Google Dopamine Dopamine is a research framework for fast prototyping of reinforcement learning algorithms. Kuldeep Singh Sidhu Tic Tac Toe Training a computer to play Tic Tac Toe using reinforcement learning algorithms. Kuldeep Singh Sidhu","title":"Reinforcement Learning"},{"location":"projects/#others","text":"Title Description Source Author TensorFlow Eager Execution Eager Execution (EE) enables you to run operations immediately. Kuldeep Singh Sidhu","title":"Others"},{"location":"Cheat-Sheets/Django/","text":"","title":"Django"},{"location":"Cheat-Sheets/Flask/","text":"","title":"Flask"},{"location":"Cheat-Sheets/Keras/","text":"","title":"Keras"},{"location":"Cheat-Sheets/NumPy/","text":"","title":"NumPy"},{"location":"Cheat-Sheets/Pandas/","text":"","title":"Pandas"},{"location":"Cheat-Sheets/PySpark/","text":"","title":"PySpark"},{"location":"Cheat-Sheets/PyTorch/","text":"","title":"PyTorch"},{"location":"Cheat-Sheets/Python/","text":"","title":"Python"},{"location":"Cheat-Sheets/RegEx/","text":"","title":"Regular Expressions (RegEx)"},{"location":"Cheat-Sheets/SQL/","text":"","title":"SQL"},{"location":"Cheat-Sheets/Sk-learn/","text":"","title":"Scikit Learn"},{"location":"Cheat-Sheets/tensorflow/","text":"","title":"TensorFlow"},{"location":"Deploying-ML-models/deploying-ml-models/","text":"Home Introduction This is a completely open-source platform for maintaining curated list of interview questions and answers for people looking and preparing for data science opportunities. Not only this, the platform will also serve as one point destination for all your needs like tutorials, online materials, etc. This platform is maintained by you! \ud83e\udd17 You can help us by answering/ improving existing questions as well as by sharing any new questions that you faced during your interviews. Contribute to the platform Contribution in any form will be deeply appreciated. \ud83d\ude4f Add questions \u2753 Add your questions here . Please ensure to provide a detailed description to allow your fellow contributors to understand your questions and answer them to your satisfaction. \ud83e\udd1d Please note that as of now, you cannot directly add a question via a pull request. This will help us to maintain the quality of the content for you . Add answers/topics \ud83d\udcdd These are the answers/topics that need your help at the moment Add documentation for the project Online Material for Learning Suggested Learning Paths Cheat Sheets Django Flask Numpy Pandas PySpark Python RegEx SQL NLP Interview Questions Add python common DSA interview questions Add Major ML topics Linear Regression Logistic Regression SVM Random Forest Gradient boosting PCA Collaborative Filtering K-means clustering kNN ARIMA Neural Networks Decision Trees Overfitting, Underfitting Unbalanced, Skewed data Activation functions relu/ leaky relu Normalization DBSCAN Normal Distribution Precision, Recall Loss Function MAE, RMSE Add Pandas questions Add NumPy questions Add TensorFlow questions Add PyTorch questions Add list of learning resources Report/Solve Issues \ud83d\udd27 To report any issues find me on LinkedIn or raise an issue on GitHub. \ud83d\udee0 You can also solve existing issues on GitHub and create a pull request. Say Thanks \ud83d\ude0a If this platform helped you in any way, it would be great if you could share it with others. Check out this \ud83d\udc47 platform \ud83d\udc47 for data science content: \ud83d\udc49 https://singhsidhukuldeep.github.io/data-science-interview-prep/ \ud83d\udc48 #data-science #machine-learning #interview-preparation You can also star the repository on GitHub and watch-out for any updates Features \ud83c\udfa8 Beautiful: The design is built on top of most popular libraries like MkDocs and material which allows the platform to be responsive and to work on all sorts of devices \u2013 from mobile phones to wide-screens. The underlying fluid layout will always adapt perfectly to the available screen space. \ud83e\uddd0 Searchable: almost magically, all the content on the website is searchable without any further ado. The built-in search \u2013 server-less \u2013 is fast and accurate in responses to any of the queries. \ud83d\ude4c Accessible: Easy to use: \ud83d\udc4c The website is hosted on github-pages and is free and open to use to over 40 million users of GitHub in 100+ countries. Easy to contribute: \ud83e\udd1d The website embodies the concept of collaboration to the latter. Allowing anyone to add/improve the content. To make contributing easy, everything is written in MarkDown and then compiled to beautiful html. Setup No setup is required for usage of the platform Important: It is strongly advised to use virtual environment and not change anything in gh-pages Linux Systems python3 -m venv ./venv source venv/bin/activate pip3 install -r requirements.txt deactivate Windows Systems python3 -m venv ./venv venv \\S cripts \\a ctivate pip3 install -r requirements.txt venv \\S cripts \\d eactivate To install the latest pip3 install mkdocs pip3 install mkdocs-material Useful Commands mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. mkdocs new [dir-name] - Create a new project. No need to create a new project Useful Documents \ud83d\udcd1 MkDocs: https://github.com/mkdocs/mkdocs \ud83c\udfa8 Theme: https://github.com/squidfunk/mkdocs-material FAQ Can I filter questions based on companies? \ud83e\udd2a As much as this platform aims to help you with your interview preparation, it is not a short-cut to crack one. Think of this platform as a practicing field to help you sharpen your skills for your interview processes. However, for your convenience we have sorted all the questions by topics for you. \ud83e\udd13 This doesn't mean that such feature won't be added in the future. \"Never say Never\" But as of now there is neither plan nor data to do so. \ud83d\ude22 Why is this platform free? \ud83e\udd17 Currently there is no major cost involved in maintaining this platform other than time and effort that is put in by every contributor . If you want to help you can contribute here . If you still want to pay for something that is free, we would request you to donate it to a charity of your choice instead. \ud83d\ude07 Credits Maintained by \ud83d\udc68\u200d\ud83c\udf93 Kuldeep Singh Sidhu Github: github/singhsidhukuldeep https://github.com/singhsidhukuldeep Website: Kuldeep Singh Sidhu (Website) http://kuldeepsinghsidhu.com LinkedIn: Kuldeep Singh Sidhu (LinkedIn) https://www.linkedin.com/in/singhsidhukuldeep/ Contributors \ud83d\ude0e The full list of all the contributors is available here Current Status","title":"Production Deployment"},{"location":"Deploying-ML-models/deploying-ml-models/#home","text":"","title":"Home"},{"location":"Deploying-ML-models/deploying-ml-models/#introduction","text":"This is a completely open-source platform for maintaining curated list of interview questions and answers for people looking and preparing for data science opportunities. Not only this, the platform will also serve as one point destination for all your needs like tutorials, online materials, etc. This platform is maintained by you! \ud83e\udd17 You can help us by answering/ improving existing questions as well as by sharing any new questions that you faced during your interviews.","title":"Introduction"},{"location":"Deploying-ML-models/deploying-ml-models/#contribute-to-the-platform","text":"Contribution in any form will be deeply appreciated. \ud83d\ude4f","title":"Contribute to the platform"},{"location":"Deploying-ML-models/deploying-ml-models/#add-questions","text":"\u2753 Add your questions here . Please ensure to provide a detailed description to allow your fellow contributors to understand your questions and answer them to your satisfaction. \ud83e\udd1d Please note that as of now, you cannot directly add a question via a pull request. This will help us to maintain the quality of the content for you .","title":"Add questions"},{"location":"Deploying-ML-models/deploying-ml-models/#add-answerstopics","text":"\ud83d\udcdd These are the answers/topics that need your help at the moment Add documentation for the project Online Material for Learning Suggested Learning Paths Cheat Sheets Django Flask Numpy Pandas PySpark Python RegEx SQL NLP Interview Questions Add python common DSA interview questions Add Major ML topics Linear Regression Logistic Regression SVM Random Forest Gradient boosting PCA Collaborative Filtering K-means clustering kNN ARIMA Neural Networks Decision Trees Overfitting, Underfitting Unbalanced, Skewed data Activation functions relu/ leaky relu Normalization DBSCAN Normal Distribution Precision, Recall Loss Function MAE, RMSE Add Pandas questions Add NumPy questions Add TensorFlow questions Add PyTorch questions Add list of learning resources","title":"Add answers/topics"},{"location":"Deploying-ML-models/deploying-ml-models/#reportsolve-issues","text":"\ud83d\udd27 To report any issues find me on LinkedIn or raise an issue on GitHub. \ud83d\udee0 You can also solve existing issues on GitHub and create a pull request.","title":"Report/Solve Issues"},{"location":"Deploying-ML-models/deploying-ml-models/#say-thanks","text":"\ud83d\ude0a If this platform helped you in any way, it would be great if you could share it with others. Check out this \ud83d\udc47 platform \ud83d\udc47 for data science content: \ud83d\udc49 https://singhsidhukuldeep.github.io/data-science-interview-prep/ \ud83d\udc48 #data-science #machine-learning #interview-preparation You can also star the repository on GitHub and watch-out for any updates","title":"Say Thanks"},{"location":"Deploying-ML-models/deploying-ml-models/#features","text":"\ud83c\udfa8 Beautiful: The design is built on top of most popular libraries like MkDocs and material which allows the platform to be responsive and to work on all sorts of devices \u2013 from mobile phones to wide-screens. The underlying fluid layout will always adapt perfectly to the available screen space. \ud83e\uddd0 Searchable: almost magically, all the content on the website is searchable without any further ado. The built-in search \u2013 server-less \u2013 is fast and accurate in responses to any of the queries. \ud83d\ude4c Accessible: Easy to use: \ud83d\udc4c The website is hosted on github-pages and is free and open to use to over 40 million users of GitHub in 100+ countries. Easy to contribute: \ud83e\udd1d The website embodies the concept of collaboration to the latter. Allowing anyone to add/improve the content. To make contributing easy, everything is written in MarkDown and then compiled to beautiful html.","title":"Features"},{"location":"Deploying-ML-models/deploying-ml-models/#setup","text":"No setup is required for usage of the platform Important: It is strongly advised to use virtual environment and not change anything in gh-pages","title":"Setup"},{"location":"Deploying-ML-models/deploying-ml-models/#linux-systems","text":"python3 -m venv ./venv source venv/bin/activate pip3 install -r requirements.txt deactivate","title":"Linux Systems"},{"location":"Deploying-ML-models/deploying-ml-models/#windows-systems","text":"python3 -m venv ./venv venv \\S cripts \\a ctivate pip3 install -r requirements.txt venv \\S cripts \\d eactivate","title":"Windows Systems"},{"location":"Deploying-ML-models/deploying-ml-models/#to-install-the-latest","text":"pip3 install mkdocs pip3 install mkdocs-material","title":"To install the latest"},{"location":"Deploying-ML-models/deploying-ml-models/#useful-commands","text":"mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. mkdocs new [dir-name] - Create a new project. No need to create a new project","title":"Useful Commands"},{"location":"Deploying-ML-models/deploying-ml-models/#useful-documents","text":"\ud83d\udcd1 MkDocs: https://github.com/mkdocs/mkdocs \ud83c\udfa8 Theme: https://github.com/squidfunk/mkdocs-material","title":"Useful Documents"},{"location":"Deploying-ML-models/deploying-ml-models/#faq","text":"Can I filter questions based on companies? \ud83e\udd2a As much as this platform aims to help you with your interview preparation, it is not a short-cut to crack one. Think of this platform as a practicing field to help you sharpen your skills for your interview processes. However, for your convenience we have sorted all the questions by topics for you. \ud83e\udd13 This doesn't mean that such feature won't be added in the future. \"Never say Never\" But as of now there is neither plan nor data to do so. \ud83d\ude22 Why is this platform free? \ud83e\udd17 Currently there is no major cost involved in maintaining this platform other than time and effort that is put in by every contributor . If you want to help you can contribute here . If you still want to pay for something that is free, we would request you to donate it to a charity of your choice instead. \ud83d\ude07","title":"FAQ"},{"location":"Deploying-ML-models/deploying-ml-models/#credits","text":"","title":"Credits"},{"location":"Deploying-ML-models/deploying-ml-models/#maintained-by","text":"\ud83d\udc68\u200d\ud83c\udf93 Kuldeep Singh Sidhu Github: github/singhsidhukuldeep https://github.com/singhsidhukuldeep Website: Kuldeep Singh Sidhu (Website) http://kuldeepsinghsidhu.com LinkedIn: Kuldeep Singh Sidhu (LinkedIn) https://www.linkedin.com/in/singhsidhukuldeep/","title":"Maintained by"},{"location":"Deploying-ML-models/deploying-ml-models/#contributors","text":"\ud83d\ude0e The full list of all the contributors is available here","title":"Contributors"},{"location":"Deploying-ML-models/deploying-ml-models/#current-status","text":"","title":"Current Status"},{"location":"Interview-Questions/Natural-Language-Processing/","text":"NLP Interview Questions","title":"Natural Language Processing (NLP)"},{"location":"Interview-Questions/Natural-Language-Processing/#nlp-interview-questions","text":"","title":"NLP Interview Questions"},{"location":"Interview-Questions/Probability/","text":"Probability Interview Questions Average score on a dice role of at most 3 times Question Consider a fair 6-sided dice. Your aim is to get the highest score you can, in at-most 3 roles. A score is defined as the number that appears on the face of the dice facing up after the role. You can role at most 3 times but every time you role it is up to you to decide whether you want to role again. The last score will be counted as your final score. Find the average score if you rolled the dice only once? Find the average score that you can get with at most 3 roles? If the dice is fair, why is the average score for at most 3 roles and 1 role not the same? Answer If you role a fair dice once you can get: Score Probability 1 \u2159 2 \u2159 3 \u2159 4 \u2159 5 \u2159 6 \u2159 So your average score with one role is: sum of(score * scores's probability) = (1+2+3+4+5+6)*(\u2159) = (21/6) = 3.5 The average score if you rolled the dice only once is 3.5 For at most 3 roles, let's try back-tracking. Let's say just did your second role and you have to decide whether to do your 3 rd role! We just found out if we role dice once on average we can expect score of 3.5. So we will only role the 3 rd time if score on 2 nd role is less than 3.5 i.e (1,2 or 3) Possibilities 2 nd role score Probability 3 rd role score Probability 1 \u2159 3.5 \u2159 2 \u2159 3.5 \u2159 3 \u2159 3.5 \u2159 4 \u2159 NA We won't role 5 \u2159 NA 3 rd time if we 6 \u2159 NA get score >3 on 2 nd So if we had 2 roles, average score would be: [We role again if current score is less than 3.4] (3.5)*(1/6) + (3.5)*(1/6) + (3.5)*(1/6) + (4)*(1/6) + (5)*(1/6) + (6)*(1/6) [Decide not to role again] = 1.75 + 2.5 = 4.25 The average score if you rolled the dice twice is 4.25 So now if we look from the perspective of first role. We will only role again if our score is less than 4.25 i.e 1,2,3 or 4 Possibilities 1 st role score Probability 2 nd and 3 rd role score Probability 1 \u2159 4.25 \u2159 2 \u2159 4.25 \u2159 3 \u2159 4.25 \u2159 4 \u2159 4.25 \u2159 5 \u2159 NA We won't role again if we 6 \u2159 NA get score >4.25 on 1 st So if we had 3 roles, average score would be: [We role again if current score is less than 4.25] (4.25)*(1/6) + (4.25)*(1/6) + (4.25)*(1/6) + (4.25)*(1/6) + (5)*(1/6) + (6)*(1/6) [[Decide not to role again] = 17/6 + 11/6 = 4.66 The average score if you rolled the dice only once is 4.66 The average score for at most 3 roles and 1 role is not the same because although the dice is fair the event of rolling the dice is no longer independent . The scores would have been the same if we rolled the dice 2 nd and 3 rd time without considering what we got in the last roll i.e. if the event of rolling the dice was independent.","title":"Probability"},{"location":"Interview-Questions/Probability/#probability-interview-questions","text":"","title":"Probability Interview Questions"},{"location":"Interview-Questions/Probability/#average-score-on-a-dice-role-of-at-most-3-times","text":"Question Consider a fair 6-sided dice. Your aim is to get the highest score you can, in at-most 3 roles. A score is defined as the number that appears on the face of the dice facing up after the role. You can role at most 3 times but every time you role it is up to you to decide whether you want to role again. The last score will be counted as your final score. Find the average score if you rolled the dice only once? Find the average score that you can get with at most 3 roles? If the dice is fair, why is the average score for at most 3 roles and 1 role not the same? Answer If you role a fair dice once you can get: Score Probability 1 \u2159 2 \u2159 3 \u2159 4 \u2159 5 \u2159 6 \u2159 So your average score with one role is: sum of(score * scores's probability) = (1+2+3+4+5+6)*(\u2159) = (21/6) = 3.5 The average score if you rolled the dice only once is 3.5 For at most 3 roles, let's try back-tracking. Let's say just did your second role and you have to decide whether to do your 3 rd role! We just found out if we role dice once on average we can expect score of 3.5. So we will only role the 3 rd time if score on 2 nd role is less than 3.5 i.e (1,2 or 3) Possibilities 2 nd role score Probability 3 rd role score Probability 1 \u2159 3.5 \u2159 2 \u2159 3.5 \u2159 3 \u2159 3.5 \u2159 4 \u2159 NA We won't role 5 \u2159 NA 3 rd time if we 6 \u2159 NA get score >3 on 2 nd So if we had 2 roles, average score would be: [We role again if current score is less than 3.4] (3.5)*(1/6) + (3.5)*(1/6) + (3.5)*(1/6) + (4)*(1/6) + (5)*(1/6) + (6)*(1/6) [Decide not to role again] = 1.75 + 2.5 = 4.25 The average score if you rolled the dice twice is 4.25 So now if we look from the perspective of first role. We will only role again if our score is less than 4.25 i.e 1,2,3 or 4 Possibilities 1 st role score Probability 2 nd and 3 rd role score Probability 1 \u2159 4.25 \u2159 2 \u2159 4.25 \u2159 3 \u2159 4.25 \u2159 4 \u2159 4.25 \u2159 5 \u2159 NA We won't role again if we 6 \u2159 NA get score >4.25 on 1 st So if we had 3 roles, average score would be: [We role again if current score is less than 4.25] (4.25)*(1/6) + (4.25)*(1/6) + (4.25)*(1/6) + (4.25)*(1/6) + (5)*(1/6) + (6)*(1/6) [[Decide not to role again] = 17/6 + 11/6 = 4.66 The average score if you rolled the dice only once is 4.66 The average score for at most 3 roles and 1 role is not the same because although the dice is fair the event of rolling the dice is no longer independent . The scores would have been the same if we rolled the dice 2 nd and 3 rd time without considering what we got in the last roll i.e. if the event of rolling the dice was independent.","title":"Average score on a dice role of at most 3 times"},{"location":"Interview-Questions/System-design/","text":"System Design","title":"System Design"},{"location":"Interview-Questions/System-design/#system-design","text":"","title":"System Design"},{"location":"Interview-Questions/data-structures-algorithms/","text":"Data Structure and Algorithms (DSA) To-do Add https://leetcode.com/discuss/interview-question/344650/Amazon-Online-Assessment-Questions \ud83d\ude01 Easy Two Number Sum Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array, in any order. If no two numbers sum up to the target sum, the function should return an empty array. # O(n) time | O(n) space def twoNumberSum ( array , targetSum ): avail = set () for i , v in enumerate ( array ): if targetSum - v in avail : return [ targetSum - v , v ] else : avail . add ( v ) return [] pass # O(nlog(n)) time | O(1) space def twoNumberSum ( array , targetSum ): array . sort () n = len ( array ) left = 0 right = n - 1 while left < right : currSum = array [ left ] + array [ right ] if currSum == targetSum : return [ array [ left ], array [ right ]] elif currSum < targetSum : left += 1 elif currSum > targetSum : right -= 1 return [] pass # O(n^2) time | O(1) space def twoNumberSum ( array , targetSum ): n = len ( array ) for i in range ( n - 1 ): for j in range ( i + 1 , n ): if array [ i ] + array [ j ] == targetSum : return [ array [ i ], array [ j ]] return [] pass Validate Subsequence Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one. A subsequence of an array is a set of numbers that aren't necessarily adjacent in the array but that are in the same order as they appear in the array. For instance, the numbers [1, 3, 4] form a subsequence of the array [1, 2, 3, 4] , and so do the numbers [2, 4]. Note that a single number in an array and the array itself are both valid subsequences of the array. # O(n) time | O(1) space - where n is the length of the array def isValidSubsequence ( array , sequence ): pArray = pSequence = 0 while pArray < len ( array ) and pSequence < len ( sequence ): if array [ pArray ] == sequence [ pSequence ]: pArray += 1 pSequence += 1 else : pArray += 1 return pSequence == len ( sequence ) pass Nth Fibonacci The Fibonacci sequence is defined as follows: Any number in the sequence is the sum of the previous 2. for fib[n] = fib[n-1] + fib[n-2] The 1 st and 2 nd are fixed at 0,1 Find the nth Nth Fibonacci sequence # O(n) time | O(n) space def getNthFib ( n ): dp = [ 0 , 1 ] while len ( dp ) < n : dp . append ( dp [ - 1 ] + dp [ - 2 ]) return dp [ n - 1 ] pass # O(n) time | O(1) space def getNthFib ( n ): last_two = [ 0 , 1 ] count = 2 while count < n : currFib = last_two [ 0 ] + last_two [ 1 ] last_two [ 0 ] = last_two [ 1 ] last_two [ 1 ] = currFib count += 1 return last_two [ 1 ] if n > 1 else last_two [ 0 ] pass Product Sum Write a function that takes in a \"special\" array and returns its product sum. A \"special\" array is a non-empty array that contains either integers or other \"special\" arrays. The product sum of a \"special\" array is the sum of its elements, where \"special\" arrays inside it are summed themselves and then multiplied by their level of depth. For example, the product sum of [x, y] is x + y ; the product sum of [x, [y, z]] is x + 2y + 2z Eg: Input: [5, 2, [7, -1], 3, [6, [-13, 8], 4]] Output: 12 # calculated as: 5 + 2 + 2 * (7 - 1) + 3 + 2 * (6 + 3 * (-13 + 8) + 4) # O(n) time | O(d) space - where n is the total number of elements in the array, # including sub-elements, and d is the greatest depth of \"special\" arrays in the array def productSum ( array , depth = 1 ): sum = 0 for i , v in enumerate ( array ): if type ( v ) is list : sum += productSum ( v , depth + 1 ) else : sum += v return sum * depth pass \ud83d\ude42 Medium Top K Frequent Words Given a non-empty list of words, return the k most frequent elements. Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first. Example 1: Input: [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2 Output: [\"i\", \"love\"] Explanation: \"i\" and \"love\" are the two most frequent words. Note that \"i\" comes before \"love\" due to a lower alphabetical order. Example 2: Input: [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4 Output: [\"the\", \"is\", \"sunny\", \"day\"] Explanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively. Note: You may assume k is always valid, 1 \u2264 k \u2264 number of unique elements. Input words contain only lowercase letters. Follow up: Try to solve it in O ( n log k ) time and O ( n ) extra space. # Count the frequency of each word, and # sort the words with a custom ordering relation # that uses these frequencies. Then take the best k of them. # Time Complexity: O(N \\log{N})O(NlogN), where NN is the length of words. # We count the frequency of each word in O(N)O(N) time, # then we sort the given words in O(N \\log{N})O(NlogN) time. # Space Complexity: O(N)O(N), the space used to store our uniqueWords. def topKFrequentWords ( words , k ) -> List [ str ]: from collections import Counter wordsFreq = Counter ( words ) uniqueWords = list ( wordsFreq . keys ()) uniqueWords . sort ( key = lambda x : ( - wordsFreq [ x ], x )) return uniqueWords [: k ] # Time Complexity: O(N \\log{k})O(Nlogk), where NN is the length of words. # We count the frequency of each word in O(N)O(N) time, then we add NN words to the heap, # each in O(\\log {k})O(logk) time. Finally, we pop from the heap up to kk times. # As k \\leq Nk\u2264N, this is O(N \\log{k})O(Nlogk) in total. # In Python, we improve this to O(N + k \\log {N})O(N+klogN): our heapq.heapify operation and # counting operations are O(N)O(N), and # each of kk heapq.heappop operations are O(\\log {N})O(logN). # Space Complexity: O(N)O(N), the space used to store our wordsFreq. # Count the frequency of each word, then add it to heap that stores the best k candidates. # Here, \"best\" is defined with our custom ordering relation, # which puts the worst candidates at the top of the heap. # At the end, we pop off the heap up to k times and reverse the result # so that the best candidates are first. # In Python, we instead use heapq.heapify, which can turn a list into a heap in linear time, # simplifying our work. def topKFrequentWords ( words , k ) -> List [ str ]: from heapq import heapify , heappop #, heappush from collections import Counter wordsFreq = Counter ( words ) heap = [( - freq , word ) for word , freq in wordsFreq . items ()] heapq . heapify ( heap ) return [ heapq . heappop ( heap )[ 1 ] for _ in range ( k )] \ud83e\udd28 Hard \ud83d\ude32 Very Hard","title":"DSA (Data Structures & Algorithms)"},{"location":"Interview-Questions/data-structures-algorithms/#data-structure-and-algorithms-dsa","text":"","title":"Data Structure and Algorithms (DSA)"},{"location":"Interview-Questions/data-structures-algorithms/#to-do","text":"Add https://leetcode.com/discuss/interview-question/344650/Amazon-Online-Assessment-Questions","title":"To-do"},{"location":"Interview-Questions/data-structures-algorithms/#easy","text":"","title":"\ud83d\ude01 Easy"},{"location":"Interview-Questions/data-structures-algorithms/#two-number-sum","text":"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array, in any order. If no two numbers sum up to the target sum, the function should return an empty array. # O(n) time | O(n) space def twoNumberSum ( array , targetSum ): avail = set () for i , v in enumerate ( array ): if targetSum - v in avail : return [ targetSum - v , v ] else : avail . add ( v ) return [] pass # O(nlog(n)) time | O(1) space def twoNumberSum ( array , targetSum ): array . sort () n = len ( array ) left = 0 right = n - 1 while left < right : currSum = array [ left ] + array [ right ] if currSum == targetSum : return [ array [ left ], array [ right ]] elif currSum < targetSum : left += 1 elif currSum > targetSum : right -= 1 return [] pass # O(n^2) time | O(1) space def twoNumberSum ( array , targetSum ): n = len ( array ) for i in range ( n - 1 ): for j in range ( i + 1 , n ): if array [ i ] + array [ j ] == targetSum : return [ array [ i ], array [ j ]] return [] pass","title":"Two Number Sum"},{"location":"Interview-Questions/data-structures-algorithms/#validate-subsequence","text":"Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one. A subsequence of an array is a set of numbers that aren't necessarily adjacent in the array but that are in the same order as they appear in the array. For instance, the numbers [1, 3, 4] form a subsequence of the array [1, 2, 3, 4] , and so do the numbers [2, 4]. Note that a single number in an array and the array itself are both valid subsequences of the array. # O(n) time | O(1) space - where n is the length of the array def isValidSubsequence ( array , sequence ): pArray = pSequence = 0 while pArray < len ( array ) and pSequence < len ( sequence ): if array [ pArray ] == sequence [ pSequence ]: pArray += 1 pSequence += 1 else : pArray += 1 return pSequence == len ( sequence ) pass","title":"Validate Subsequence"},{"location":"Interview-Questions/data-structures-algorithms/#nth-fibonacci","text":"The Fibonacci sequence is defined as follows: Any number in the sequence is the sum of the previous 2. for fib[n] = fib[n-1] + fib[n-2] The 1 st and 2 nd are fixed at 0,1 Find the nth Nth Fibonacci sequence # O(n) time | O(n) space def getNthFib ( n ): dp = [ 0 , 1 ] while len ( dp ) < n : dp . append ( dp [ - 1 ] + dp [ - 2 ]) return dp [ n - 1 ] pass # O(n) time | O(1) space def getNthFib ( n ): last_two = [ 0 , 1 ] count = 2 while count < n : currFib = last_two [ 0 ] + last_two [ 1 ] last_two [ 0 ] = last_two [ 1 ] last_two [ 1 ] = currFib count += 1 return last_two [ 1 ] if n > 1 else last_two [ 0 ] pass","title":"Nth Fibonacci"},{"location":"Interview-Questions/data-structures-algorithms/#product-sum","text":"Write a function that takes in a \"special\" array and returns its product sum. A \"special\" array is a non-empty array that contains either integers or other \"special\" arrays. The product sum of a \"special\" array is the sum of its elements, where \"special\" arrays inside it are summed themselves and then multiplied by their level of depth. For example, the product sum of [x, y] is x + y ; the product sum of [x, [y, z]] is x + 2y + 2z Eg: Input: [5, 2, [7, -1], 3, [6, [-13, 8], 4]] Output: 12 # calculated as: 5 + 2 + 2 * (7 - 1) + 3 + 2 * (6 + 3 * (-13 + 8) + 4) # O(n) time | O(d) space - where n is the total number of elements in the array, # including sub-elements, and d is the greatest depth of \"special\" arrays in the array def productSum ( array , depth = 1 ): sum = 0 for i , v in enumerate ( array ): if type ( v ) is list : sum += productSum ( v , depth + 1 ) else : sum += v return sum * depth pass","title":"Product Sum"},{"location":"Interview-Questions/data-structures-algorithms/#medium","text":"","title":"\ud83d\ude42 Medium"},{"location":"Interview-Questions/data-structures-algorithms/#top-k-frequent-words","text":"Given a non-empty list of words, return the k most frequent elements. Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first. Example 1: Input: [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2 Output: [\"i\", \"love\"] Explanation: \"i\" and \"love\" are the two most frequent words. Note that \"i\" comes before \"love\" due to a lower alphabetical order. Example 2: Input: [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4 Output: [\"the\", \"is\", \"sunny\", \"day\"] Explanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively. Note: You may assume k is always valid, 1 \u2264 k \u2264 number of unique elements. Input words contain only lowercase letters. Follow up: Try to solve it in O ( n log k ) time and O ( n ) extra space. # Count the frequency of each word, and # sort the words with a custom ordering relation # that uses these frequencies. Then take the best k of them. # Time Complexity: O(N \\log{N})O(NlogN), where NN is the length of words. # We count the frequency of each word in O(N)O(N) time, # then we sort the given words in O(N \\log{N})O(NlogN) time. # Space Complexity: O(N)O(N), the space used to store our uniqueWords. def topKFrequentWords ( words , k ) -> List [ str ]: from collections import Counter wordsFreq = Counter ( words ) uniqueWords = list ( wordsFreq . keys ()) uniqueWords . sort ( key = lambda x : ( - wordsFreq [ x ], x )) return uniqueWords [: k ] # Time Complexity: O(N \\log{k})O(Nlogk), where NN is the length of words. # We count the frequency of each word in O(N)O(N) time, then we add NN words to the heap, # each in O(\\log {k})O(logk) time. Finally, we pop from the heap up to kk times. # As k \\leq Nk\u2264N, this is O(N \\log{k})O(Nlogk) in total. # In Python, we improve this to O(N + k \\log {N})O(N+klogN): our heapq.heapify operation and # counting operations are O(N)O(N), and # each of kk heapq.heappop operations are O(\\log {N})O(logN). # Space Complexity: O(N)O(N), the space used to store our wordsFreq. # Count the frequency of each word, then add it to heap that stores the best k candidates. # Here, \"best\" is defined with our custom ordering relation, # which puts the worst candidates at the top of the heap. # At the end, we pop off the heap up to k times and reverse the result # so that the best candidates are first. # In Python, we instead use heapq.heapify, which can turn a list into a heap in linear time, # simplifying our work. def topKFrequentWords ( words , k ) -> List [ str ]: from heapq import heapify , heappop #, heappush from collections import Counter wordsFreq = Counter ( words ) heap = [( - freq , word ) for word , freq in wordsFreq . items ()] heapq . heapify ( heap ) return [ heapq . heappop ( heap )[ 1 ] for _ in range ( k )]","title":"Top K Frequent Words"},{"location":"Interview-Questions/data-structures-algorithms/#hard","text":"","title":"\ud83e\udd28 Hard"},{"location":"Interview-Questions/data-structures-algorithms/#very-hard","text":"","title":"\ud83d\ude32 Very Hard"},{"location":"Machine-Learning/ARIMA/","text":"","title":"ARIMA"},{"location":"Machine-Learning/Activation%20functions/","text":"","title":"Activation functions"},{"location":"Machine-Learning/Collaborative%20Filtering/","text":"","title":"Collaborative Filtering"},{"location":"Machine-Learning/Confusion%20Matrix/","text":"","title":"Confusion Matrix"},{"location":"Machine-Learning/DBSCAN/","text":"","title":"DBSCAN"},{"location":"Machine-Learning/Decision%20Trees/","text":"","title":"Decision Trees"},{"location":"Machine-Learning/Gradient%20Boosting/","text":"","title":"Gradient Boosting"},{"location":"Machine-Learning/K-means%20clustering/","text":"","title":"K means clustering"},{"location":"Machine-Learning/Linear%20Regression/","text":"","title":"Linear Regression"},{"location":"Machine-Learning/Logistic%20Regression/","text":"","title":"Logistic Regression"},{"location":"Machine-Learning/Loss%20Function%20MAE%2C%20RMSE/","text":"","title":"Loss Function MAE, RMSE"},{"location":"Machine-Learning/Neural%20Networks/","text":"","title":"Neural Networks"},{"location":"Machine-Learning/Normal%20Distribution/","text":"","title":"Normal Distribution"},{"location":"Machine-Learning/Normalization%20Regularisation/","text":"","title":"Normalization Regularisation"},{"location":"Machine-Learning/Overfitting%2C%20Underfitting/","text":"","title":"Overfitting, Underfitting"},{"location":"Machine-Learning/PCA/","text":"","title":"PCA"},{"location":"Machine-Learning/Random%20Forest/","text":"","title":"Random Forest"},{"location":"Machine-Learning/Support%20Vector%20Machines/","text":"","title":"Support Vector Machines"},{"location":"Machine-Learning/Unbalanced%2C%20Skewed%20data/","text":"","title":"Unbalanced, Skewed data"},{"location":"Machine-Learning/kNN/","text":"","title":"kNN"},{"location":"Online-Material/Online-Material-for-Learning/","text":"","title":"Online Study Material"},{"location":"Online-Material/popular-resouces/","text":"","title":"Popular Blogs"},{"location":"as-fast-as-possible/","text":"","title":"Introduction"},{"location":"as-fast-as-possible/Deep-CV/","text":"","title":"Deep Computer Vision"},{"location":"as-fast-as-possible/Deep-NLP/","text":"","title":"Deep Natural Language Processing"},{"location":"as-fast-as-possible/Neural-Networks/","text":"","title":"Neural Networks"},{"location":"as-fast-as-possible/TF2-Keras/","text":"","title":"Tensorflow 2 with Keras"}]}